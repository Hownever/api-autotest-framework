- config:
    name: JDSF Create config
    request:
         base_url: http://openapi.jdsf.jdcloud.com

    variables:
        - test_api: DescribeRegistries
        - appconfigid: 17

- test:
    name:  get appconfig for $appconfigid
    request:
        url: /v1/regions/cn-north-1/appconfig/$appconfigid/versions
        method: GET
        headers:
            # jdcloud-api-test
            x-jdcloud-pin: jdcloud-api-test
            # x-jdcloud-pin: jcloud_00

            Content-Type: application/json
        json:
            appConfigId: $appconfigid
            regionId: cn-north-1
    setup_hooks:
        - ${update_JD_headers($request)}
    extract:
        - lastversion: content.result.appConfigVersions.0.appConfigVersion
    validate:
        - eq: ["status_code", 200]
        - len_eq: [content.requestId, 32]
        - len_gt: [content.result.appConfigVersions.0.appConfigVersion, 0 ]

- test:
    name:  create appconfig
    request:
        url: /v1/regions/cn-north-1/appconfig/$appconfigid/versions
        method: POST
        headers:
            x-jdcloud-pin: jdcloud-api-test
            # x-jdcloud-pin: jcloud_00
            Content-Type: application/json
        json:
            appConfigContent: "name: look\nVersion: $lastversion"
            appConfigParentVersionId: "$appconfigid"
            appConfigRemark: " 稳定性测试，版本创建"
            appConfigVersion: ${get_jdsf_config_version($lastversion)}
    validate:
        - eq: ["status_code", 200]
        - len_eq: [content.requestId, 32]
        - eq: [content.result.createResult, "SUCCESS"]
