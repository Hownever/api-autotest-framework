config:
    name: Token 安全测试
    description: |
        网格注入功能测试，Ingress不注入， Envoy注入
    variables:
        times: 0
        # reviews：
        backend: ${ENV(ENV_TEST_PROVIDER)}.default.mesh.jdcloud.com:9080/reviews/0

testcases:
    Ingress转发验证：仅转发请求，不注入AUTHTOKEN - 对productpage开启token验证，从Ingress调用productpage的api:
        testcase: testcases/jdmesh-token/apply-token-settings-then-verify-functions-productpage-api.yml
        parameters:
            c_host:
                - ${ENV(ENV_PRODUCT_PAGE_BASE_URL)}

            c_mesh_openapi_host:
                - ${ENV(ENV_JDMESH_WEB_BASE_URL)}
            c_product_productpage:
                - ${ENV(ENV_TEST_CONSUMER)}
            c_env:
                - ${ENV(ENV_TEST_ENV)}

            c_token_productpage: [1]
            casesummary-c_expected_status_code-c_headers-c_update_token_settings_waittime:
                - [
                  "从Ingress调用网格内应用，仅转发请求，不注入AUTHTOKEN - 请求未携带authtoken，禁止调用 - $c_productpage_host",
                  403,
                  {},
                  "${ENV(ENV_UPDATE_ARK_TOKEN_SETTINGS_WAITTIME_SEC)}",
                  ]
                - [
                  "从Ingress调用网格内应用，仅转发请求，原请求包含AUTHTOKEN时，能正确转发 - 请求携带错误authtoken，禁止调用 - $c_productpage_host",
                  403,
                  {"authtoken": "Invalid token 123456"},
                  "${ENV(ENV_UPDATE_ARK_TOKEN_SETTINGS_WAITTIME_SEC)}",
                  ]
#                - [
#                  "从Ingress调用网格内应用，仅转发请求，原请求包含AUTHTOKEN时，能正确转发 - 请求携带正确authtoken，允许调用 - $c_productpage_host",
#                  200,
#                  {"authtoken": "$c_token"},
#                  "${ENV(ENV_UPDATE_ARK_TOKEN_SETTINGS_WAITTIME_SEC)}",
#                  ]

    envoy注入AUTHTOKEN验证：当header中无authtoken时，从环境变量注入AUTHTOKEN - 对reviews开启token验证，productpage关闭token验证，从Ingress调用productpage的api，调用reviews服务，允许调用:
        testcase: testcases/jdmesh-token/apply-token-settings-then-verify-functions-productpage-reviews.yml
        parameters:
            c_host:
                - ${ENV(ENV_PRODUCT_PAGE_BASE_URL)}

            c_mesh_openapi_host:
                - ${ENV(ENV_JDMESH_WEB_BASE_URL)}
            c_product_productpage:
                - ${ENV(ENV_TEST_CONSUMER)}
            c_product_reviews:
                - ${ENV(ENV_TEST_PROVIDER)}
            c_env:
                - ${ENV(ENV_TEST_ENV)}
            c_enableWhiteListCheck: [False]
            c_enableNegativeHealthCheck: [False]
            c_healthCheckInterval: [10]
            c_healthCheckconsecutiveErrors: [5]
            c_healthCheckmaxEjectionPercent: [30]
            c_healthCheckbaseEjectionTime: [180]
            c_serviceEntries: [[]]

            c_token_productpage: [0]
            c_token_reviews: [1]
            casesummary-c_expected_status_code-c_headers:
                - [
                  "从Ingress调用网格内应用，可以正常转发并注入AUTHTOKEN，正常访问 - $c_productpage_host",
                  200,
                  {},
                  ]
    envoy注入AUTHTOKEN验证：不覆盖header中authtoken内容 - 对reviews开启token验证，productpage关闭token验证，从Ingress调用productpage的api，调用reviews服务，允许调用:
        testcase: testcases/jdmesh-token/apply-token-settings-then-verify-functions-productpage-reviews.yml
        parameters:
            c_host:
                - ${ENV(ENV_PRODUCT_PAGE_BASE_URL)}

            c_mesh_openapi_host:
                - ${ENV(ENV_JDMESH_WEB_BASE_URL)}
            c_product_productpage:
                - ${ENV(ENV_TEST_CONSUMER)}
            c_product_reviews:
                - ${ENV(ENV_TEST_PROVIDER)}
            c_env:
                - ${ENV(ENV_TEST_ENV)}
            c_enableWhiteListCheck: [False]
            c_enableNegativeHealthCheck: [False]
            c_healthCheckInterval: [10]
            c_healthCheckconsecutiveErrors: [5]
            c_healthCheckmaxEjectionPercent: [30]
            c_healthCheckbaseEjectionTime: [180]
            c_serviceEntries: [[]]

            c_token_productpage: [0]
            c_token_reviews: [1]
            casesummary-c_expected_status_code-c_headers:
                - [
                  "从Ingress调用网格内应用，可以正常转发并注入AUTHTOKEN，正常访问 - $c_productpage_host",
                  200,
                  {
                  Content-Type: application/json;charset=UTF-8,
                  authtoken: "1234567",
                  }
                  ]
    网关注入AUTHTOKEN验证：请求中无authtoken时，网关注入网关环境变量的AUTHTOKEN - 对producpage和reviews都开启token验证，通过网格内网关调用，允许调用:
        testcase: testcases/jdmesh-token/apply-token-settings-then-verify-functions-apigateway.yml
        parameters:
            c_productpage_host:
                - ${ENV(ENV_PRE_INTER_GW_MESH_BASE_URL)}
            c_product_servicecode:
                - productpage-mesh
            c_apiVersion:
                - v1
            c_regionId:
                - cn-north-1
            c_openapi_yaml:
                - nofile
            c_AK:
                - ${ENV(ENV_PRE_USER_AK_BACK)}
            c_SK:
                - ${ENV(ENV_PRE_USER_SK_BACK)}
            c_user_pin:
                - ${ENV(ENV_PRE_USER_PIN_BACK)}
            c_productid: [0]

            c_mesh_openapi_host:
                - ${ENV(ENV_JDMESH_WEB_BASE_URL)}
            c_product_productpage:
                - ${ENV(ENV_TEST_CONSUMER)}
            c_product_reviews:
                - ${ENV(ENV_TEST_PROVIDER)}
            c_env:
                - ${ENV(ENV_TEST_ENV)}
            c_enableWhiteListCheck: [False]
            c_enableNegativeHealthCheck: [False]
            c_healthCheckInterval: [10]
            c_healthCheckconsecutiveErrors: [5]
            c_healthCheckmaxEjectionPercent: [30]
            c_healthCheckbaseEjectionTime: [180]
            c_serviceEntries: [[]]

            c_token_productpage: [1]
            c_token_reviews: [1]
            casesummary-c_expected_status_code-c_headers:
                - [
                  "从Ingress调用网格内应用，可以正常转发并注入AUTHTOKEN，正常访问 - $c_productpage_host",
                  200,
                  {
                  Content-Type: application/json;charset=UTF-8,
                  x-jdcloud-pin: $c_user_pin,
                  # authtoken: "1234567",
                  }
                  ]

    网关注入AUTHTOKEN验证：请求中有authtoken时，网关注入网关环境变量的AUTHTOKEN，覆盖其值 - 对producpage和reviews都开启token验证，通过网格内网关调用，允许调用:
        testcase: testcases/jdmesh-token/apply-token-settings-then-verify-functions-apigateway.yml
        parameters:
            c_productpage_host:
                - ${ENV(ENV_PRE_INTER_GW_MESH_BASE_URL)}
            c_product_servicecode:
                - productpage-mesh
            c_apiVersion:
                - v1
            c_regionId:
                - cn-north-1
            c_openapi_yaml:
                - nofile
            c_AK:
                - ${ENV(ENV_PRE_USER_AK_BACK)}
            c_SK:
                - ${ENV(ENV_PRE_USER_SK_BACK)}
            c_user_pin:
                - ${ENV(ENV_PRE_USER_PIN_BACK)}
            c_productid: [0]

            c_mesh_openapi_host:
                - ${ENV(ENV_JDMESH_WEB_BASE_URL)}
            c_product_productpage:
                - ${ENV(ENV_TEST_CONSUMER)}
            c_product_reviews:
                - ${ENV(ENV_TEST_PROVIDER)}
            c_env:
                - ${ENV(ENV_TEST_ENV)}

            c_token_productpage: [1]
            c_token_reviews: [1]
            casesummary-c_expected_status_code-c_headers:
                - [
                  "从Ingress调用网格内应用，可以正常转发并注入AUTHTOKEN，正常访问 - $c_productpage_host",
                  200,
                  {
                  Content-Type: application/json;charset=UTF-8,
                  x-jdcloud-pin: $c_user_pin,
                  authtoken: "1234567",
                  }
                  ]


#    # TODO: 使用mockserver验证网格确实注入的header是正确的
#    注入逻辑：当应用请求自带authtoken请求header时，网格仍能够正确注入token，并使用mockserver验证网格确实注入的header是正确的（网格有出现注入的authtoken到后端时为2个的情况，需要确认是替换，而不是添加），允许调用:
#        testcase: testcases/jdmesh-token/apply-token-settings-then-verify-functions-remotecall.yml
#        parameters:
#            c_host:
#                - ${ENV(ENV_PRODUCT_PAGE_BASE_URL)}
#
#            c_mesh_openapi_host:
#                - ${ENV(ENV_JDMESH_WEB_BASE_URL)}
#            c_product_productpage:
#                - ${ENV(ENV_TEST_CONSUMER)}
#            c_product_reviews:
#                - ${ENV(ENV_TEST_PROVIDER)}
#            c_env:
#                - ${ENV(ENV_TEST_ENV)}
#
#            c_token_productpage: [0]
#            c_token_reviews: [1]
#            casesummary-c_expected_status_code-c_protocol-c_headers-c_datas:
#                - [
#                  "网格内应用未带token调用其他应用时，网格会自动注入正确token - productpage发起reviews调用时，未带authtoken时，envoy会自动注入正确token",
#                  200, HTTP,
#                  {},
#                  {"url": "$backend", "method": "GET", "headers":{"x-request-jdmesh-test-id":"${gen_random_string(10)}"}}
#                  ]
#                - [
#                  "即使网格内应用自带了错误的authtoken，网格也会替换它，保证能够调用成功-使用导致sdk core error token来remotecall reviews，网格会替换成正确的，允许访问 - $c_productpage_host",
#                  200, HTTP,
#                  {"authtoken": "an error token"},
#                  {"url": "$backend", "method": "GET", "headers":{"x-request-jdmesh-test-id":"${gen_random_string(10)}","authtoken":"an error token"}}
#                  ]