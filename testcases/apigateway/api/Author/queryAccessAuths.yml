name: 查询访问授权列表
description: 查询访问授权列表
operationId: queryAccessAuths

variables:
#    url
    host_qaa: ${ENV(ENV_OPENAPI_INNER_DATA_HOST)}
    apiVer_qaa: ${ENV(ENV_API_VERSION)}
    regionId_qaa: ${ENV(ENV_APIM_REGIONID)}
#    header
    header_qaa:
        Content-Type: application/json;charset=UTF-8
        x-jdcloud-pin: ${ENV(ENV_PIN)}
#    params
    pageNumber_qaa: 1
    pageSize_qaa: 100
    filters1_qaa: AAA
    filters1operator_qaa: A
    filters1values_qaa: A
    filters2_qaa: A
    filters2operator_qaa: A
    filters2values_qaa: A
#    hooks
    serviceLine_qaa: ${ENV(ENV_SERVICELINE_APIM)}
    openapiYaml_qaa: nofile
    openApiAk_qaa: ${ENV(ENV_OPENAPI_SYS_AK)}
    openApiSk_qaa: ${ENV(ENV_OPENAPI_SYS_SK)}
    apiVersion_qaa: v1

request:
    url: $host_qaa/$apiVer_qaa/regions/$regionId_qaa/accessAuths
    method: GET
    headers: $header_qaa
    params:
        pageNumber: $pageNumber_qaa
        pageSize: $pageSize_qaa
        filters.1.name: $filters1_qaa
        filters.1.operator: $filters1operator_qaa
        filters.1.values.1: $filters1values_qaa
        filters.2.name: $filters2_qaa
        filters.2.operator: $filters2operator_qaa
        filters.2.values.1: $filters2values_qaa
setup_hooks:
    - ${hook_update_jdcloud_request($request, $openApiAk_qaa, $openApiSk_qaa, $serviceLine_qaa, $apiVersion_qaa, $openapiYaml_qaa, $regionId_qaa)}
teardown_hooks:
    - ${hook_print("teardown_hooks for config")
