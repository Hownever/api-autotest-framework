- config:
    name: 创建分组-成功
    variables:
    #    path
        regionId_apim_vpcgw: ${ENV(ENV_APIM_REGIONID)}
        serviceLine_apim_vpcgw: ${ENV(ENV_SERVICELINE_APIM)}
    #    json
        groupName_vpcgw: JIASHUO_TEST_VPC
        description_vpcgw: 测试微服务VPC网关，勿删
        prefix_vpcgw:
        keyCheck_vpcgw: check_exist
        authType_vpcgw: jd_cloud
        prefixStrip_vpcgw: 0
        groupType_vpcgw: api_group
        jdsfName_vpcgw:
        jdsfRegistryName_vpcgw:
        jdsfId_vpcgw:
        environment_vpcgw:
        backendServiceType_vpcgw: vpc
        backendUrl_vpcgw:
        #-----------------------------------------------------
        filters1values_vpcgw: JIASHUO_TEST_VPC
        serviceLine_jdsf_vpcgw: ${ENV(ENV_SERVICELINE_JDSF)}
        regionId_jdsf_vpcgw: ${ENV(ENV_JDSF_REGIONID)}
        gatewayName_vpcgw: JIASHUO_TEST_VPC
        gatewayType_vpcgw: VPC_PROXY
        vpcId_vpcgw: vpc-7hrcljzkli
        subnetId_vpcgw: subnet-jqsaas34xn
        gatewaySpec_vpcgw: QPS_1500
        gatewayVersion_vpcgw: 1.0.0
        rz_vpcgw:
        rzType_vpcgw: SYSTEM
        chargeMode_vpcgw: CONFIG
        chargeUnit_vpcgw:
        apiGroupRegion_vpcgw: ${ENV(ENV_APIM_REGIONID)}
        registryId_vpcgw:
        proxyAddress_vpcgw: 172.16.10.103:5111
#        proxyAddress_vpcgw: 116.196.96.7:5111
        timeSpan_vpcgw:
        serviceNames_vpcgw:
        #-----------------------------------------------------
        authFlag_vpcgw: jd_cloud
        accessKey_vpcgw: ${ENV(ENV_USER_AK)}
        secretKey_vpcgw: ${ENV(ENV_USER_SK)}
        #-----------------------------------------------------
        kmsName_vpcgw: ${ENV(ENV_KMS_NAME)}
        subsName_vpcgw: ${ENV(ENV_SUBS_KEY_NAME)}
        #-----------------------------------------------------
        userinfo_vpcgw:
            proxyAddress_vpcgw: 116.196.96.7:5111
            vpcId_vpcgw: vpc-97fysl2cyn
            subnetId_vpcgw: subnet-ll47yy373i
            registryId_vpcgw:
            serviceNames_vpcgw:
    verify: False


- test:
    name: 删除旧数据：删除旧的API分组
    testcase: testcases/jdsfgw/prepare_for_createApiGroup.yml
    variables:
        serviceLine_pcag: $serviceLine_apim_vpcgw
        regionId_apim_pcag: $regionId_apim_vpcgw
        filters1values_pcag: $groupName_vpcgw

- test:
    name: 创建分组成功，分组名：$groupName_vpcgw，分组类型：$groupType_vpcgw
    api: api/apiGroup/createApiGroup.yml
    variables:
    #    path
        regionId_cag: $regionId_apim_vpcgw
    #    json
        groupName_cag: $groupName_vpcgw
        description_cag: $description_vpcgw
        prefix_cag: $prefix_vpcgw
        keyCheck_cag: $keyCheck_vpcgw
        authType_cag: $authType_vpcgw
        prefixStrip_cag: $prefixStrip_vpcgw
        groupType_cag: $groupType_vpcgw
        jdsfName_cag: $jdsfName_vpcgw
        jdsfRegistryName_cag: $jdsfRegistryName_vpcgw
        jdsfId_cag: $jdsfId_vpcgw
        serviceLine_cag: $serviceLine_apim_vpcgw
    extract:
        - apiGroupId_cag: content.result.apiGroupId
        - revision_cag: content.result.revision
    validate:
        - eq: ["status_code", 200]
        - len_eq: [$apiGroupId_cag, 15]
        - eq: [$revision_cag, 0.0.1]
        - contains: [$apiGroupId_cag, ag-]
    output:
        - apiGroupId_cag
        - revision_cag

- test:
    name: 查询微服务网关各信息，绑定分组
    testcase: testcases/jdsfgw/prepare_for_createGateway.yml
    variables:
        regionId_apim_pcg: $regionId_apim_vpcgw
        regionId_jdsf_pcg: $regionId_jdsf_vpcgw
        filters1values_pcg: $gatewayName_vpcgw
    #-----------------------------------------------------
        gatewayName_pcg: $gatewayName_vpcgw
        gatewayType_pcg: $gatewayType_vpcgw
        vpcId_pcg: $vpcId_vpcgw
        subnetId_pcg: $subnetId_vpcgw
        gatewaySpec_pcg: $gatewaySpec_vpcgw
        gatewayVersion_pcg: $gatewayVersion_vpcgw
        rz_pcg: $rz_vpcgw
        rzType_pcg: $rzType_vpcgw
        chargeMode_pcg: $chargeMode_vpcgw
        chargeUnit_pcg: $chargeUnit_vpcgw
        apiGroupId_pcg: $apiGroupId_cag
        apiGroupRegion_pcg: $regionId_apim_vpcgw
        registryId_pcg: $registryId_vpcgw
        proxyAddress_pcg: $proxyAddress_vpcgw
        timeSpan_pcg: $timeSpan_vpcgw
        serviceNames_pcg: $serviceNames_vpcgw
        serviceLine_pcg: $serviceLine_jdsf_vpcgw
        jdsfParam_pcg: $proxyAddress_vpcgw
        jdsfRegion_pcg: $regionId_jdsf_vpcgw
    output:
        - gatewayId_dg
        - registryId_dg
        - gatewayName_dg

- test:
    name: 查询分组，绑定信息正确
    api: api/apiGroup/batchQueryApiGroups.yml
    variables:
        regionId_bqag: $regionId_apim_vpcgw
        filters1values_bqag: $gatewayId_dg
        serviceLine_bqag: $serviceLine_apim_vpcgw
    extract:
        - apiGroup_bqag: content.result.apiGroups.0
        - apiGroupId_bqag: content.result.apiGroups.0.apiGroupId
        - jdsfId_bqag: content.result.apiGroups.0.jdsfId
        - jdsfName_bqag: content.result.apiGroups.0.jdsfName
        - environment_bqag: content.result.apiGroups.0.environment
        - jdsfRegistryName_bqag: content.result.apiGroups.0.jdsfRegistryName
    validate:
        - eq: ["status_code", 200]
        - eq: [$apiGroupId_bqag, $apiGroupId_cag]
        - contains: [$jdsfId_bqag, $gatewayId_dg]
        - eq: [$jdsfName_bqag, null]
        - eq: [$jdsfRegistryName_bqag, null]
        - eq: [$environment_bqag, "test,preview,online"]
#------------------------------------------------------------------------------------------------------------
- test:
    name: 创建API_create_task_json
    api: api/createApis/createApis_create_task_json.yml
    variables:
        apiGroupId_ctj: $apiGroupId_cag
        revision_ctj: $revision_cag
        regionId_ctj: $regionId_apim_vpcgw
    validate:
        - eq: ["status_code", 200]
- test:
    name: 创建API_delete_task
    api: api/createApis/createApis_delete_task.yml
    variables:
        apiGroupId_dt: $apiGroupId_cag
        revision_dt: $revision_cag
        regionId_dt: $regionId_apim_vpcgw
    validate:
        - eq: ["status_code", 200]
- test:
    name: 创建API_get_all_task
    api: api/createApis/createApis_get_all_task.yml
    variables:
        apiGroupId_gat: $apiGroupId_cag
        revision_gat: $revision_cag
        regionId_gat: $regionId_apim_vpcgw
    validate:
        - eq: ["status_code", 200]
- test:
    name: 创建API_head_task
    api: api/createApis/createApis_head_task.yml
    variables:
        apiGroupId_ht: $apiGroupId_cag
        revision_ht: $revision_cag
        regionId_ht: $regionId_apim_vpcgw
    validate:
        - eq: ["status_code", 200]
- test:
    name: 创建API_patch_task_json
    api: api/createApis/createApis_patch_task_json.yml
    variables:
        apiGroupId_ptj: $apiGroupId_cag
        revision_ptj: $revision_cag
        regionId_ptj: $regionId_apim_vpcgw
    validate:
        - eq: ["status_code", 200]
- test:
    name: 创建API_put_task_json
    api: api/createApis/createApis_put_task_json.yml
    variables:
        apiGroupId_puttj: $apiGroupId_cag
        revision_puttj: $revision_cag
        regionId_puttj: $regionId_apim_vpcgw
    validate:
        - eq: ["status_code", 200]
- test:
    name: 创建API_test_all_type_get
    api: api/createApis/createApis_test_all_type_get.yml
    variables:
        apiGroupId_tatg: $apiGroupId_cag
        revision_tatg: $revision_cag
        regionId_tatg: $regionId_apim_vpcgw
    validate:
        - eq: ["status_code", 200]
- test:
    name: 创建API_test_all_type_post
    api: api/createApis/createApis_test_all_type_post.yml
    variables:
        apiGroupId_tatp: $apiGroupId_cag
        revision_tatp: $revision_cag
        regionId_tatp: $regionId_apim_vpcgw
    validate:
        - eq: ["status_code", 200]
#------------------------------------------------------------------------------------------------------------
#- test:
#    name: 创建测试环境后端配置
#    api: api/BackendConfig/adminCreateBackendConfig.yml
#    variables:
#        regionId_cbc: $regionId_apim_vpcgw
#        apiGroupId_cbc: $apiGroupId_cag
#        baseGroupId_cbc: $apiGroupId_cag
#        environment_cbc: test
#        jdsfId_cbc: $gatewayId_dg
#        jdsfParam_cbc: $proxyAddress_vpcgw
#        jdsfRegion_cbc: $regionId_jdsf_vpcgw
#        jdsfPin_cbc: ${ENV(ENV_PIN)}
#        backendUrl_cbc: ~
#        backendServiceType_cbc: $backendServiceType_vpcgw
#        sort_cbc: 0
#        serviceLine_cbc: $serviceLine_apim_vpcgw
#    validate:
#        - eq: ["status_code", 200]
#- test:
#    name: 创建预发环境后端配置
#    api: api/BackendConfig/adminCreateBackendConfig.yml
#    variables:
#        regionId_cbc: $regionId_apim_vpcgw
#        apiGroupId_cbc: $apiGroupId_cag
#        baseGroupId_cbc: $apiGroupId_cag
#        environment_cbc: preview
#        jdsfId_cbc: $gatewayId_dg
#        jdsfParam_cbc: $proxyAddress_vpcgw
#        jdsfRegion_cbc: $regionId_jdsf_vpcgw
#        jdsfPin_cbc: ${ENV(ENV_PIN)}
#        backendUrl_cbc: ~
#        backendServiceType_cbc: $backendServiceType_vpcgw
#        sort_cbc: 0
#        serviceLine_cbc: $serviceLine_apim_vpcgw
#    validate:
#        - eq: ["status_code", 200]
#- test:
#    name: 创建线上环境后端配置
#    api: api/BackendConfig/adminCreateBackendConfig.yml
#    variables:
#        regionId_cbc: $regionId_apim_vpcgw
#        apiGroupId_cbc: $apiGroupId_cag
#        baseGroupId_cbc: $apiGroupId_cag
#        environment_cbc: online
#        jdsfId_cbc: $gatewayId_dg
#        jdsfParam_cbc: $proxyAddress_vpcgw
#        jdsfRegion_cbc: $regionId_jdsf_vpcgw
#        jdsfPin_cbc: ${ENV(ENV_PIN)}
#        backendUrl_cbc: ~
#        backendServiceType_cbc: $backendServiceType_vpcgw
#        sort_cbc: 0
#        serviceLine_cbc: $serviceLine_apim_vpcgw
#    validate:
#        - eq: ["status_code", 200]
#------------------------------------------------------------------------------------------------------------
- test:
    name: 发布分组到测试环境
    api: api/Deployment/deployByAdmin.yml
    variables:
    #    url
        regionId_dba: $regionId_apim_vpcgw
        apiGroupId_dba: $apiGroupId_cag
    #    json
        revision_dba: $revision_cag
        environment_dba: test
        backendServiceType_dba: $backendServiceType_vpcgw
        backendUrl_dba:
        description_dba:
        jdsfName_dba: $proxyAddress_vpcgw
        jdsfRegistryName_dba:
        jdsfId_dba: $gatewayId_dg
        serviceLine_dba: $serviceLine_apim_vpcgw
    validate:
        - eq: ["status_code", 200]

- test:
    name: 发布分组到预发环境
    api: api/Deployment/deployByAdmin.yml
    variables:
    #    url
        regionId_dba: $regionId_apim_vpcgw
        apiGroupId_dba: $apiGroupId_cag
    #    json
        revision_dba: $revision_cag
        environment_dba: preview
        backendServiceType_dba: $backendServiceType_vpcgw
        backendUrl_dba:
        description_dba:
        jdsfName_dba: $proxyAddress_vpcgw
        jdsfRegistryName_dba:
        jdsfId_dba: $gatewayId_dg
        serviceLine_dba: $serviceLine_apim_vpcgw
    validate:
        - eq: ["status_code", 200]

- test:
    name: 发布分组到线上环境
    api: api/Deployment/deployByAdmin.yml
    variables:
    #    url
        regionId_dba: $regionId_apim_vpcgw
        apiGroupId_dba: $apiGroupId_cag
    #    json
        revision_dba: $revision_cag
        environment_dba: online
        backendServiceType_dba: $backendServiceType_vpcgw
        backendUrl_dba:
        description_dba:
        jdsfName_dba: $proxyAddress_vpcgw
        jdsfRegistryName_dba:
        jdsfId_dba: $gatewayId_dg
        serviceLine_dba: $serviceLine_apim_vpcgw
    validate:
        - eq: ["status_code", 200]
#--------------------------------------------------------------------------------------------------------------
- test:
    name: 如果授权类型是京东云用户，绑定访问授权，删除旧数据
    skipIf: ${validate_skip($authFlag_vpcgw, jd_cloud, noeq)}
    testcase: testcases/jdsfgw/prepare_for_createAccessAuth_jdcloud.yml
    variables:
        accessKey_pcaaj: $accessKey_vpcgw
        serviceLine_pcaaj: $serviceLine_apim_vpcgw
        regionId_apim_pcaaj: $regionId_apim_vpcgw
        filters2values_pcaaj: $accessKey_vpcgw
    validate:
        - eq: ["status_code", 200]

- test:
    name: 如果授权类型是京东云用户，创建jdcloud访问授权，绑定分组线上环境
    skipIf: ${validate_skip($authFlag_vpcgw, jd_cloud, noeq)}
    api: api/Author/createAccessAuth.yml
    variables:
        accessKey_caa: $accessKey_vpcgw
        authUserType_caa: jd_cloud
        deploymentIds_caa: ${return_string($apiGroupId_cag, online)}
        description_caa: $accessKey_vpcgw+jd_cloud+${return_string($apiGroupId_cag, online)}
        serviceLine_caa: $serviceLine_apim_vpcgw
        regionId_caa: $regionId_apim_vpcgw
    validate:
          - eq: ["status_code", 200]

- test:
    name: 如果授权类型是京东云用户，创建jdcloud访问授权，绑定分组预发环境
    skipIf: ${validate_skip($authFlag_vpcgw, jd_cloud, noeq)}
    api: api/Author/createAccessAuth.yml
    variables:
        accessKey_caa: $accessKey_vpcgw
        authUserType_caa: jd_cloud
        deploymentIds_caa: ${return_string($apiGroupId_cag, preview)}
        description_caa: $accessKey_vpcgw+jd_cloud+${return_string($apiGroupId_cag, preview)}
        serviceLine_caa: $serviceLine_apim_vpcgw
        regionId_caa: $regionId_apim_vpcgw
    validate:
          - eq: ["status_code", 200]

- test:
    name: 如果授权类型是京东云用户，创建jdcloud访问授权，绑定分组测试环境
    skipIf: ${validate_skip($authFlag_vpcgw, jd_cloud, noeq)}
    api: api/Author/createAccessAuth.yml
    variables:
        accessKey_caa: $accessKey_vpcgw
        authUserType_caa: jd_cloud
        deploymentIds_caa: ${return_string($apiGroupId_cag, test)}
        description_caa: $accessKey_vpcgw+jd_cloud+${return_string($apiGroupId_cag, test)}
        serviceLine_caa: $serviceLine_apim_vpcgw
        regionId_caa: $regionId_apim_vpcgw
    validate:
          - eq: ["status_code", 200]

- test:
    name: 请求测试环境微服务网关，请求成功
    skipIf: ${validate_skip($authFlag_vpcgw, jd_cloud, noeq)}
    testcase: testcases/jdsfgw/requestAllApis.yml
    variables:
        apiGroupId_raa: $apiGroupId_cag
        env_raa: test
        regionId_apim_raa: $regionId_apim_vpcgw
        accessKey_raa: $accessKey_vpcgw
        secretKey_raa: $secretKey_vpcgw
        description_raa: description_vpcgw
        title_raa: tc_title
        subscriptionKey_raa: subscriptionKey
        done_raa: False

- test:
    name: 请求预发环境微服务网关，请求成功
    skipIf: ${validate_skip($authFlag_vpcgw, jd_cloud, noeq)}
    testcase: testcases/jdsfgw/requestAllApis.yml
    variables:
        apiGroupId_raa: $apiGroupId_cag
        env_raa: preview
        regionId_apim_raa: $regionId_apim_vpcgw
        accessKey_raa: $accessKey_vpcgw
        secretKey_raa: $secretKey_vpcgw
        description_raa: description_vpcgw
        title_raa: tc_title
        subscriptionKey_raa: subscriptionKey
        done_raa: False

- test:
    name: 请求线上环境微服务网关，请求成功
    skipIf: ${validate_skip($authFlag_vpcgw, jd_cloud, noeq)}
    testcase: testcases/jdsfgw/requestAllApis.yml
    variables:
        apiGroupId_raa: $apiGroupId_cag
        env_raa: online
        regionId_apim_raa: $regionId_apim_vpcgw
        accessKey_raa: $accessKey_vpcgw
        secretKey_raa: $secretKey_vpcgw
        description_raa: description_vpcgw
        title_raa: tc_title
        subscriptionKey_raa: subscriptionKey
        done_raa: False
#--------------------------------------------------------------------------------------------------------------
- test:
    name: 如果授权类型是API网关签名，绑定访问授权，删除旧数据
    skipIf: ${validate_skip($authFlag_vpcgw, jd_apikms, noeq)}
    testcase: testcases/jdsfgw/prepare_for_createAccessAuth_kms.yml
    variables:
        regionId_apim_pcaak: $regionId_apim_vpcgw
        serviceLine_apim_pcaak: $serviceLine_apim_vpcgw
        kmsName_pcaak: ${ENV(ENV_KMS_NAME)}
    validate:
        - eq: ["status_code", 200]

- test:
    name: 如果授权类型是API网关签名，创建kms
    skipIf: ${validate_skip($authFlag_vpcgw, jd_apikms, noeq)}
    api: api/kms/createKey.yml
    variables:
        keyName_ck: $kmsName_vpcgw
        keyDesc_ck: $kmsName_vpcgw
        serviceLine_ck: $serviceLine_apim_vpcgw
        regionId_ck: $regionId_apim_vpcgw
    extract:
        - kmsaccessKey_ck: content.result.accessKey
        - kmssecretKey_ck: content.result.secretKey
        - kmskeyId_ck: content.result.keyId
    validate:
          - eq: ["status_code", 200]
    output:
        - kmsaccessKey_ck
        - kmssecretKey_ck
        - kmskeyId_ck

- test:
    name: 如果授权类型是API网关签名，创建kms访问授权，绑定分组线上环境
    skipIf: ${validate_skip($authFlag_vpcgw, jd_apikms, noeq)}
    api: api/Author/createAccessAuth.yml
    variables:
        regionId_caa: $regionId_apim_vpcgw
        accessKey_caa: $kmskeyId_ck
        authUserType_caa: jd_apikms
        deploymentIds_caa: ${return_string($apiGroupId_cag, online)}
        description_caa: $kmsaccessKey_ck+jd_apikms+${return_string($apiGroupId_cag, online)}
        serviceLine_caa: $serviceLine_apim_vpcgw
    validate:
          - eq: ["status_code", 200]

- test:
    name: 如果授权类型是API网关签名，创建kms访问授权，绑定分组预发环境
    skipIf: ${validate_skip($authFlag_vpcgw, jd_apikms, noeq)}
    api: api/Author/createAccessAuth.yml
    variables:
        regionId_caa: $regionId_apim_vpcgw
        accessKey_caa: $kmskeyId_ck
        authUserType_caa: jd_apikms
        deploymentIds_caa: ${return_string($apiGroupId_cag, preview)}
        description_caa: $accessKey_vpcgw+jd_apikms+${return_string($apiGroupId_cag, preview)}
        serviceLine_caa: $serviceLine_apim_vpcgw
    validate:
          - eq: ["status_code", 200]

- test:
    name: 如果授权类型是API网关签名，创建kms访问授权，绑定分组测试环境
    skipIf: ${validate_skip($authFlag_vpcgw, jd_apikms, noeq)}
    api: api/Author/createAccessAuth.yml
    variables:
        regionId_caa: $regionId_apim_vpcgw
        accessKey_caa: $kmskeyId_ck
        authUserType_caa: jd_apikms
        deploymentIds_caa: ${return_string($apiGroupId_cag, test)}
        description_caa: $accessKey_vpcgw+jd_apikms+${return_string($apiGroupId_cag, test)}
        serviceLine_caa: $serviceLine_apim_vpcgw
    validate:
          - eq: ["status_code", 200]

- test:
    name: 请求线上环境微服务网关，请求成功
    skipIf: ${validate_skip($authFlag_vpcgw, jd_apikms, noeq)}
    testcase: testcases/jdsfgw/requestAllApis.yml
    variables:
        authFlag_raa: $authFlag_vpcgw
        apiGroupId_raa: $apiGroupId_cag
        env_raa: online
        regionId_apim_raa: $regionId_apim_vpcgw
        accessKey_raa: $kmsaccessKey_ck
        secretKey_raa: $kmssecretKey_ck
        description_raa: description_vpcgw
        title_raa: tc_title
        subscriptionKey_raa: subscriptionKey
        done_raa: False

- test:
    name: 请求预发环境微服务网关，请求成功
    skipIf: ${validate_skip($authFlag_vpcgw, jd_apikms, noeq)}
    testcase: testcases/jdsfgw/requestAllApis.yml
    variables:
        apiGroupId_raa: $apiGroupId_cag
        env_raa: preview
        regionId_apim_raa: $regionId_apim_vpcgw
        accessKey_raa: $kmsaccessKey_ck
        secretKey_raa: $kmssecretKey_ck
        description_raa: description_vpcgw
        title_raa: tc_title
        subscriptionKey_raa: subscriptionKey
        done_raa: False

- test:
    name: 请求测试环境微服务网关，请求成功
    skipIf: ${validate_skip($authFlag_vpcgw, jd_apikms, noeq)}
    testcase: testcases/jdsfgw/requestAllApis.yml
    variables:
        apiGroupId_raa: $apiGroupId_cag
        env_raa: test
        regionId_apim_raa: $regionId_apim_vpcgw
        accessKey_raa: $kmsaccessKey_ck
        secretKey_raa: $kmssecretKey_ck
        description_raa: description_vpcgw
        title_raa: tc_title
        subscriptionKey_raa: subscriptionKey
        done_raa: False
#--------------------------------------------------------------------------------------------------------------
- test:
    name: 如果授权类型是订阅密钥，绑定访问授权，删除旧数据
    skipIf: ${validate_skip($authFlag_vpcgw, jd_subscription_key, noeq)}
    testcase: testcases/jdsfgw/prepare_for_createAccessAuth_subs.yml
    variables:
        regionId_apim_pcaas: $regionId_apim_vpcgw
        serviceLine_apim_pcaas: $serviceLine_apim_vpcgw
        subsName_pcaas: $subsName_vpcgw
    validate:
        - eq: ["status_code", 200]

- test:
    name: 如果授权类型是订阅密钥，创建订阅密钥
    skipIf: ${validate_skip($authFlag_vpcgw, jd_subscription_key, noeq)}
    api: api/subscriptionKey/createSubscriptionKey.yml
    variables:
        serviceLine_csk: $serviceLine_apim_vpcgw
        regionId_csk: $regionId_apim_vpcgw
        name_csk: $subsName_vpcgw
        description_csk: $subsName_vpcgw
    validate:
          - eq: ["status_code", 200]

- test:
    name: 如果授权类型是订阅密钥，检查是否已创建
    skipIf: ${validate_skip($authFlag_vpcgw, jd_subscription_key, noeq)}
    api: api/subscriptionKey/querySubscriptionKeys.yml
    variables:
        serviceLine_qsk: $serviceLine_apim_vpcgw
        regionId_qsk: $regionId_apim_vpcgw
        filters1_qsk:
        filters1values_qsk:
    extract:
        - subscriptionKeys_qsk: content.result.subscriptionKeys
        - totalCount_qsk: content.result.totalCount
    validate:
        - eq: ["status_code", 200]
    output:
        - subscriptionKeys_qsk

- test:
    name: 创建订阅密钥访问授权，绑定分组线上环境
    skipIf: ${validate_skip($authFlag_vpcgw, jd_subscription_key, noeq)}
    api: api/Author/createAccessAuth.yml
    variables:
        serviceLine_caa: $serviceLine_apim_vpcgw
        regionId_caa: $regionId_apim_vpcgw
        accessKey_caa: ${get_id_from_list($subscriptionKeys_qsk, name, $subsName_vpcgw, subscriptionKeyId)}
        authUserType_caa: jd_subscription_key
        deploymentIds_caa: ${return_string($apiGroupId_cag, online)}
        description_caa: ${get_id_from_list($subscriptionKeys_qsk, name, $subsName_vpcgw, subscriptionKeyId)}+jd_subscription_key+${return_string($apiGroupId_cag, online)}
    validate:
          - eq: ["status_code", 200]

- test:
    name: 创建订阅密钥访问授权，绑定分组预发环境
    skipIf: ${validate_skip($authFlag_vpcgw, jd_subscription_key, noeq)}
    api: api/Author/createAccessAuth.yml
    variables:
        serviceLine_caa: $serviceLine_apim_vpcgw
        regionId_caa: $regionId_apim_vpcgw
        accessKey_caa: ${get_id_from_list($subscriptionKeys_qsk, name, $subsName_vpcgw, subscriptionKeyId)}
        authUserType_caa: jd_subscription_key
        deploymentIds_caa: ${return_string($apiGroupId_cag, preview)}
        description_caa: ${get_id_from_list($subscriptionKeys_qsk, name, $subsName_vpcgw, subscriptionKeyId)}+jd_subscription_key+${return_string($apiGroupId_cag, preview)}
    validate:
          - eq: ["status_code", 200]

- test:
    name: 创建订阅密钥访问授权，绑定分组测试环境
    skipIf: ${validate_skip($authFlag_vpcgw, jd_subscription_key, noeq)}
    api: api/Author/createAccessAuth.yml
    variables:
        serviceLine_caa: $serviceLine_apim_vpcgw
        regionId_caa: $regionId_apim_vpcgw
        accessKey_caa: ${get_id_from_list($subscriptionKeys_qsk, name, $subsName_vpcgw, subscriptionKeyId)}
        authUserType_caa: jd_subscription_key
        deploymentIds_caa: ${return_string($apiGroupId_cag, test)}
        description_caa: ${get_id_from_list($subscriptionKeys_qsk, name, $subsName_vpcgw, subscriptionKeyId)}+jd_subscription_key+${return_string($apiGroupId_cag, test)}
    validate:
          - eq: ["status_code", 200]

- test:
    name: 请求测试环境微服务网关，请求成功
    skipIf: ${validate_skip($authFlag_vpcgw, jd_subscription_key, noeq)}
    testcase: testcases/jdsfgw/requestAllApis.yml
    variables:
        apiGroupId_raa: $apiGroupId_cag
        env_raa: test
        regionId_apim_raa: $regionId_apim_vpcgw
        accessKey_raa: USERAK
        secretKey_raa: USERSK
        description_raa: description_vpcgw
        title_raa: tc_title
        subscriptionKey_raa: ${get_id_from_list($subscriptionKeys_qsk, name, $subsName_vpcgw, subscriptionKey)}
        done_raa: False

- test:
    name: 请求预发环境微服务网关，请求成功
    skipIf: ${validate_skip($authFlag_vpcgw, jd_subscription_key, noeq)}
    testcase: testcases/jdsfgw/requestAllApis.yml
    variables:
        apiGroupId_raa: $apiGroupId_cag
        env_raa: preview
        regionId_apim_raa: $regionId_apim_vpcgw
        accessKey_raa: USERAK
        secretKey_raa: USERSK
        description_raa: description_vpcgw
        title_raa: tc_title
        subscriptionKey_raa: ${get_id_from_list($subscriptionKeys_qsk, name, $subsName_vpcgw, subscriptionKey)}
        done_raa: False

- test:
    name: 请求线上环境微服务网关，请求成功
    skipIf: ${validate_skip($authFlag_vpcgw, jd_subscription_key, noeq)}
    testcase: testcases/jdsfgw/requestAllApis.yml
    variables:
        apiGroupId_raa: $apiGroupId_cag
        env_raa: online
        regionId_apim_raa: $regionId_apim_vpcgw
        accessKey_raa: USERAK
        secretKey_raa: USERSK
        description_raa: description_vpcgw
        title_raa: tc_title
        subscriptionKey_raa: ${get_id_from_list($subscriptionKeys_qsk, name, $subsName_vpcgw, subscriptionKey)}
        done_raa: False

#----------------------------------------------------------------------------------------------------------------
- test:
    name: 删除已创建的API分组
    testcase: testcases/jdsfgw/prepare_for_createApiGroup.yml
    variables:
        serviceLine_apim_pcag: $serviceLine_apim_vpcgw
        regionId_apim_pcag: $regionId_apim_vpcgw
        filters1values_pcag: $groupName_vpcgw