- config:
    name: 微服务网关错误情况
    variables:
    #    path
        regionId_apim_jdsfgw: ${ENV(ENV_APIM_REGIONID)}
        serviceLine_apim_jdsfgw: ${ENV(ENV_SERVICELINE_APIM)}
    #    json
        groupName_jdsfgw: JIASHUO_TEST_JDSF
        description_jdsfgw: 测试微服务网关，勿删
        prefix_jdsfgw:
        keyCheck_jdsfgw: check_exist
        authType_jdsfgw: jd_cloud
        prefixStrip_jdsfgw: 0
        groupType_jdsfgw: jdsf_group
        jdsfName_jdsfgw:
        jdsfRegistryName_jdsfgw:
        jdsfId_jdsfgw:
        environment_jdsfgw: online
        backendServiceType_jdsfgw: jdsf
        backendUrl_jdsfgw:
        #-----------------------------------------------------
        filters1values_jdsfgw: JIASHUO_TEST_JDSF
        serviceLine_jdsf_jdsfgw: ${ENV(ENV_SERVICELINE_JDSF)}
        regionId_jdsf_jdsfgw: ${ENV(ENV_JDSF_REGIONID)}
        gatewayName_jdsfgw: JIASHUO_TEST_JDSF
        gatewayType_jdsfgw: MICROSERVICE
        vpcId_jdsfgw: vpc-7hrcljzkli
        subnetId_jdsfgw: subnet-jqsaas34xn
        gatewaySpec_jdsfgw: QPS_100
        gatewayVersion_jdsfgw: 1.0.0
        rz_jdsfgw: prod_bj02
        rzType_jdsfgw: SYSTEM
        chargeMode_jdsfgw: CONFIG
        chargeUnit_jdsfgw:
        apiGroupRegion_jdsfgw: cn-north-1
        registryId_jdsfgw: reg-1r67qqm63nc3k
        proxyAddress_jdsfgw:
        timeSpan_jdsfgw:
        serviceNames_jdsfgw:
            - jdsf-server-nolink
        #-----------------------------------------------------
        authFlag_jdsfgw: jd_cloud
        serviceNames_one_jdsfgw: jdsf-server-nolink
        accessKey_jdsfgw: ${ENV(ENV_USER_AK)}
        secretKey_jdsfgw: ${ENV(ENV_USER_SK)}
        #-----------------------------------------------------
        kmsName_jdsfgw: ${ENV(ENV_KMS_NAME)}
        subsName_jdsfgw: ${ENV(ENV_SUBS_KEY_NAME)}
        #-----------------------------------------------------
    verify: False

- test:
    name: 删除旧数据：删除旧的API分组
    testcase: testcases/jdsfgw/prepare_for_createApiGroup.yml
    variables:
        serviceLine_pcag: $serviceLine_apim_jdsfgw
        regionId_apim_pcag: $regionId_apim_jdsfgw
        filters1values_pcag: $groupName_jdsfgw

- test:
    name: 创建分组成功，分组名：$groupName_jdsfgw，分组类型：$groupType_jdsfgw
    api: api/apiGroup/createApiGroup.yml
    variables:
    #    path
        regionId_cag: $regionId_apim_jdsfgw
    #    json
        groupName_cag: $groupName_jdsfgw
        description_cag: $description_jdsfgw
        prefix_cag: $prefix_jdsfgw
        keyCheck_cag: $keyCheck_jdsfgw
        authType_cag: $authType_jdsfgw
        prefixStrip_cag: $prefixStrip_jdsfgw
        groupType_cag: $groupType_jdsfgw
        jdsfName_cag: $jdsfName_jdsfgw
        jdsfRegistryName_cag: $jdsfRegistryName_jdsfgw
        jdsfId_cag: $jdsfId_jdsfgw
        serviceLine_cag: $serviceLine_apim_jdsfgw
    extract:
        - apiGroupId_cag: content.result.apiGroupId
        - revision_cag: content.result.revision
    validate:
        - eq: ["status_code", 200]
        - len_eq: [$apiGroupId_cag, 15]
        - eq: [$revision_cag, 0.0.1]
        - contains: [$apiGroupId_cag, ag-]
    output:
        - apiGroupId_cag
        - revision_cag

- test:
    name: 不绑定就发布，会报错
    api: api/Deployment/deployByAdmin.yml
    variables:
    #    url
        regionId_dba: $regionId_apim_jdsfgw
        apiGroupId_dba: $apiGroupId_cag
    #    json
        revision_dba: $revision_cag
        environment_dba: online
        backendServiceType_dba: $backendServiceType_jdsfgw
        backendUrl_dba:
        description_dba:
        jdsfName_dba:
        jdsfRegistryName_dba:
        jdsfId_dba:
        serviceLine_dba: $serviceLine_apim_jdsfgw
    extract:
        - scode: status_code
        - error_message: content.error.message
        - error_status: content.error.status
    validate:
        - eq: [$scode, 404]
        - eq: [$error_status, APIGATEWAY_JDSF_GROUP_NO_BIND]
        - contains: [$error_message, "未绑定微服务网关"]

- test:
    name: 查询微服务网关各信息，绑定分组
    testcase: testcases/jdsfgw/prepare_for_createGateway.yml
    variables:
        regionId_pcg: $regionId_jdsf_jdsfgw
        filters1values_pcg: $gatewayName_jdsfgw
    #-----------------------------------------------------
        gatewayName_pcg: $gatewayName_jdsfgw
        gatewayType_pcg: $gatewayType_jdsfgw
        vpcId_pcg: $vpcId_jdsfgw
        subnetId_pcg: $subnetId_jdsfgw
        gatewaySpec_pcg: $gatewaySpec_jdsfgw
        gatewayVersion_pcg: $gatewayVersion_jdsfgw
        rz_pcg: $rz_jdsfgw
        rzType_pcg: $rzType_jdsfgw
        chargeMode_pcg: $chargeMode_jdsfgw
        chargeUnit_pcg: $chargeUnit_jdsfgw
        apiGroupId_pcg: $apiGroupId_cag
        apiGroupRegion_pcg: $regionId_apim_jdsfgw
        registryId_pcg: $registryId_jdsfgw
        proxyAddress_pcg: $proxyAddress_jdsfgw
        timeSpan_pcg: $timeSpan_jdsfgw
        serviceNames_pcg: $serviceNames_jdsfgw
        serviceLine_pcg: $serviceLine_jdsf_jdsfgw
        groupType_pcg: $groupType_jdsfgw
    output:
        - gatewayId_dg
        - registryId_dg
        - gatewayName_dg

- test:
    name: 查询分组，绑定信息正确
    api: api/apiGroup/batchQueryApiGroups.yml
    variables:
    #    url
        regionId_bqag: $regionId_apim_jdsfgw
    #    para
        filters1values_bqag: $gatewayId_dg
        serviceLine_bqag: $serviceLine_apim_jdsfgw
    extract:
        - apiGroup_bqag: content.result.apiGroups.0
        - apiGroupId_bqag: content.result.apiGroups.0.apiGroupId
        - jdsfId_bqag: content.result.apiGroups.0.jdsfId
        - jdsfName_bqag: content.result.apiGroups.0.jdsfName
        - environment_bqag: content.result.apiGroups.0.environment
        - jdsfRegistryName_bqag: content.result.apiGroups.0.jdsfRegistryName
    validate:
        - eq: ["status_code", 200]

- test:
    name: 发布分组到线上环境
    api: api/Deployment/deployByAdmin.yml
    variables:
    #    url
        regionId_dba: $regionId_apim_jdsfgw
        apiGroupId_dba: $apiGroupId_cag
    #    json
        revision_dba: $revision_cag
        environment_dba: online
        backendServiceType_dba: $backendServiceType_jdsfgw
        backendUrl_dba:
        description_dba:
        jdsfName_dba:
        jdsfRegistryName_dba:
        jdsfId_dba: $gatewayId_dg
        serviceLine_dba: $serviceLine_apim_jdsfgw
    validate:
        - eq: ["status_code", 200]

- test:
    name: 不绑定访问授权访问，报错Invalid authentication credentials
    skipIf: ${validate_skip($authFlag_jdsfgw, jd_cloud, noeq)}
    api: api/requestBackend/testJdsf.yml
    variables:
        subscriptionKey: subscriptionKey
        gw_host: ${return_string($apiGroupId_cag, env=online, host=1, regionId=$regionId_apim_jdsfgw)}
        USERAK: $accessKey_jdsfgw
        USERSK: WRONG_USERSK
        jdsfServiceName: $serviceNames_one_jdsfgw
    extract:
        - scode: status_code
        - error_message: content.error.message
        - error_status: content.error.status
    validate:
        - eq: [$scode, 401]
        - eq: [$error_status, ACCESS_ERROR]
        - contains: [$error_message, "Invalid authentication credentials [gw]"]

#--------------------------------------------------------------------------------------------------------------
- test:
    name: 如果授权类型不是京东云用户，跳过；如果是京东云用户，绑定访问授权，删除旧数据
    skipIf: ${validate_skip($authFlag_jdsfgw, jd_cloud, noeq)}
    testcase: testcases/jdsfgw/prepare_for_createAccessAuth_jdcloud.yml
    variables:
        accessKey_pcaaj: $accessKey_jdsfgw
        serviceLine_apim_pcaaj: $serviceLine_apim_jdsfgw
        regionId_apim_pcaaj: $regionId_apim_jdsfgw
        filters2values_pcaaj: $accessKey_jdsfgw
    validate:
        - eq: ["status_code", 200]

- test:
    name: 创建jdcloud访问授权，绑定分组线上环境
    skipIf: ${validate_skip($authFlag_jdsfgw, jd_cloud, noeq)}
    api: api/Author/createAccessAuth.yml
    variables:
        accessKey_caa: $accessKey_jdsfgw
        authUserType_caa: jd_cloud
        deploymentIds_caa: ${return_string($apiGroupId_cag, online)}
        description_caa: $accessKey_jdsfgw+jd_cloud+${return_string($apiGroupId_cag, online)}
        serviceLine_caa: $serviceLine_apim_jdsfgw
        regionId_caa: $regionId_apim_jdsfgw
    validate:
        - eq: ["status_code", 200]

- test:
    name: 请求线上环境微服务网关，请求成功
    skipIf: ${validate_skip($authFlag_jdsfgw, jd_cloud, noeq)}
    api: api/requestBackend/testJdsf.yml
    variables:
        jdsfServiceName: $serviceNames_one_jdsfgw
        subscriptionKey: subscriptionKey
        gw_host: ${return_string($apiGroupId_cag, env=online, host=1, regionId=$regionId_apim_jdsfgw)}
        USERAK: $accessKey_jdsfgw
        USERSK: $secretKey_jdsfgw
    validate:
        - eq: ["status_code", 200]

- test:
    name: 使用错误的jdsfServiceName
    skipIf: ${validate_skip($authFlag_jdsfgw, jd_cloud, noeq)}
    api: api/requestBackend/testJdsf.yml
    variables:
        jdsfServiceName: wrong_jdsfServiceName
        subscriptionKey: subscriptionKey
        gw_host: ${return_string($apiGroupId_cag, env=online, host=1, regionId=$regionId_apim_jdsfgw)}
        USERAK: $accessKey_jdsfgw
        USERSK: $secretKey_jdsfgw
    validate:
        - eq: ["status_code", 400]

- test:
    name: 使用错误的SK，报错sign result is not same
    skipIf: ${validate_skip($authFlag_jdsfgw, jd_cloud, noeq)}
    api: api/requestBackend/testJdsf.yml
    variables:
        jdsfServiceName: $serviceNames_one_jdsfgw
        subscriptionKey: subscriptionKey
        gw_host: ${return_string($apiGroupId_cag, env=online, host=1, regionId=$regionId_apim_jdsfgw)}
        USERAK: $accessKey_jdsfgw
        USERSK: WRONG_USERSK
    extract:
        - scode: status_code
        - error_message: content.error.message
        - error_status: content.error.status
    validate:
        - eq: [$scode, 401]
        - eq: [$error_status, ACCESS_ERROR]
        - contains: [$error_message, "sign result is not same [gw]"]

- test:
    name: 使用错误的AK，报错Invalid authentication credentials
    skipIf: ${validate_skip($authFlag_jdsfgw, jd_cloud, noeq)}
    api: api/requestBackend/testJdsf.yml
    variables:
        jdsfServiceName: $serviceNames_one_jdsfgw
        subscriptionKey: subscriptionKey
        gw_host: ${return_string($apiGroupId_cag, env=online, host=1, regionId=$regionId_apim_jdsfgw)}
        USERAK: WRONG_USERAK
        USERSK: $secretKey_jdsfgw
    extract:
        - scode: status_code
        - error_message: content.error.message
        - error_status: content.error.status
    validate:
        - eq: [$scode, 401]
        - eq: [$error_status, ACCESS_ERROR]
        - contains: [$error_message, "Invalid authentication credentials [gw]"]

- test:
    name: 如果分组已创建，下线online
    skipIf: ${validate_skip($authFlag_jdsfgw, jd_cloud, noeq)}
    api: api/Deployment/offline.yml
    variables:
        regionId_o: $regionId_apim_jdsfgw
        deploymentId_o: $apiGroupId_cag-online
        apiGroupId_o: $apiGroupId_cag
        serviceLine_o: $serviceLine_apim_jdsfgw

- test:
    name: 下线后请求，报错api is disabled
    skipIf: ${validate_skip($authFlag_jdsfgw, jd_cloud, noeq)}
    api: api/requestBackend/testJdsf.yml
    variables:
        jdsfServiceName: $serviceNames_one_jdsfgw
        subscriptionKey: subscriptionKey
        gw_host: ${return_string($apiGroupId_cag, env=online, host=1, regionId=$regionId_apim_jdsfgw)}
        USERAK: WRONG_USERAK
        USERSK: $secretKey_jdsfgw
    extract:
        - scode: status_code
        - error_message: content.error.message
        - error_status: content.error.status
    validate:
        - eq: [$scode, 403]
        - eq: [$error_status, HTTP_FORBIDDEN]
        - contains: [$error_message, "api is disabled [gw]"]

#----------------------------------------------------------------------------------------------------------------
- test:
    name: 删除已创建的API分组
    testcase: testcases/jdsfgw/prepare_for_createApiGroup.yml
    variables:
        serviceLine_apim_pcag: $serviceLine_apim_jdsfgw
        regionId_apim_pcag: $regionId_apim_jdsfgw
        filters1values_pcag: $groupName_jdsfgw