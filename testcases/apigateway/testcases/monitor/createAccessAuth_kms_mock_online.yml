- config:
    name: 创建分组-创建kms访问授权-成功
    base_url: ${ENV(ENV_BASE_URL)}
    variables:
        product: ${ENV(ENV_PRODUCT)}
        apiVersion: ${ENV(ENV_API_VERSION)}
        openapi_yaml: ${ENV(ENV_OPENAPI_SWAGGER_FILE_PATH)}
        regionId: ${ENV(ENV_DEFAULT_REGIONID)}
        api_ver: ${ENV(ENV_API_VERSION)}
        pin: ${ENV(ENV_PIN)}
        AK: ${ENV(ENV_AK)}
        SK: ${ENV(ENV_SK)}
        authUserType: jd_apikms
        kmsName: ${ENV(ENV_KMS_NAME)}
    verify: False
    output:
        - apiGroupId
        - revision
        - kmsaccessKey
        - kmssecretKey
        - deploymentIds

- test:
    name: 发布分组-后端为Http
    testcase: testcases/monitor/deploy_online_mock_200.yml
    output:
        - apiGroupId
        - revision
        - environment

- test:
    name: 删除旧数据
    testcase: testcases/monitor/prepare_for_createAccessAuth_kms.yml

- test:
    name: 创建kms
    api: api/monitor/kmsCreateKey.yml
    variables:
        keyName: $kmsName
        keyDesc: $kmsName
    output:
        - kmsaccessKey
        - kmssecretKey
        - kmskeyId

- test:
    name: 创建kms访问授权，绑定分组
    api: api/monitor/createAccessAuth.yml
    variables:
        accessKey: $kmskeyId
        authUserType: $authUserType
        deploymentIds: ${return_string($apiGroupId, $environment)}
        description: $kmsaccessKey+$authUserType+${return_string($apiGroupId, $environment)}